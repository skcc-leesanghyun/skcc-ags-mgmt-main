server:
  port: ${SERVICE_PORT:8082}
  servlet:
    context-path: /api/planning

spring:
  application:
    name: planning-service
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:ags_planning}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OKTA_ISSUER_URI}
          jwk-set-uri: ${OKTA_JWK_SET_URI}

mybatis:
  mapper-locations: classpath:mappers/**/*.xml
  configuration:
    map-underscore-to-camel-case: true
    default-fetch-size: 100
    default-statement-timeout: 30
  type-aliases-package: com.skcc.ags.planning.domain

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
  packages-to-scan: com.skcc.ags.planning.controller

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  health:
    db:
      enabled: true

logging:
  level:
    root: INFO
    com.skcc.ags: DEBUG
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.mybatis: DEBUG 